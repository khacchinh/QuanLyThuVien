<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>